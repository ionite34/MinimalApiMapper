//HintName: MinimalApiMapper.MappingExtensions.g.cs
// <auto-generated/>
#nullable enable
using <global namespace>;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Routing;
using Microsoft.Extensions.DependencyInjection;
using System;

namespace MinimalApiMapper.Generated;

public static class MinimalApiMapperMappingExtensions
{
    public static IEndpointRouteBuilder MapApiGroups(this IEndpointRouteBuilder app)
    {
        app.MapGet("api/test/hello", (HttpContext context, [FromQuery] string name) =>
        {
            var __sp = context.RequestServices;
            var __group = __sp.GetRequiredService<global::MyTestApi.Groups.TestApiGroup>();
            return __group.GetHello(name);
        });

        app.MapPost("api/test/dto", [AllowAnonymous] (HttpContext context, [FromBody] global::MyTestApi.Groups.TestDto dto) =>
        {
            var __sp = context.RequestServices;
            var __group = __sp.GetRequiredService<global::MyTestApi.Groups.TestApiGroup>();
            return __group.PostDto(dto);
        });

        app.MapGet("api/test/voidreturn", (HttpContext context) =>
        {
            var __sp = context.RequestServices;
            var __group = __sp.GetRequiredService<global::MyTestApi.Groups.TestApiGroup>();
            __group.GetVoid();
            return Results.Ok();
        });

        app.MapDelete("api/test/asyncdelete/{id}", (HttpContext context, int id) =>
        {
            var __sp = context.RequestServices;
            var __group = __sp.GetRequiredService<global::MyTestApi.Groups.TestApiGroup>();
            return __group.DeleteAsync(id);
        });

        return app;
    }
}
